# Stock option
n1=[-39957,-17136,35466,21820,-26711]
n2=[-4527,-1579,-38732,-43669,-9287,-48068,-30293,-30867,18677]
n=n2
min =n[0]
sum =0
for i in range(len(n)):
    sum =sum + n[i]
    if sum < min:
        min=sum
print(min)
====================================
# ALT + TAB
n=4
n1=[1,2,3,4]
n2=3
#o/P==>[3,1,2,4]
index=n2-1
temp =n1[n2-1]
while(index>0):
    n1[index]=n1[index-1]
    index =index-1
n1[0]=temp
print(n1)

====================================
/*Police Unit*/
#input2=[1,1,3,4]
input2 =[1,1,1,4]
count=0
for i in range(1,len(input2)):
    temp = input2[i-1]
    while(temp>=input2[i]):
        count+=1
        input2[i]+=1
print(count)

===================================
/*Street Light--*/
#l =[[10,5],[8,12],[11,15]]
l =[[10,5]]
for i in l:
    i.sort()
l.sort()
total_covered_light =0
light_unit =0
common_area =0
sum_light_unit=0
sum_common_area=0
#-------------covered light unit by each light-------------#
for i in range(1,len(l)+1):
    if l[i-1][1] > l[i-1][0]:
        light_unit =l[i-1][1]-l[i-1][0]
    sum_light_unit +=light_unit
#-------------Covered Common area by two light--------------#
for j in range(len(l)-1):
    #print(l[i-1][1]>l[j][0])
    if l[j][1]>l[j+1][0] and j<len(l):
        common_area = l[j][1]-l[j+1][0]
    sum_common_area +=common_area
total_covered_light = sum_light_unit - sum_common_area
print(total_covered_light)

======================================
/* The Race */
l= [(1,3),(2,5),(2,4),(3,5)]
sum =0
rep =0
for i in range(len(l)):
    count =0
    for j in range(i,len(l)):
        if l[i][1]==l[j][0]:
            count +=1
        if count>=sum:
            sum =count
            rep =l[i][1]
print(sum,rep)

====================================
/* placement */
a =[3,4,1,5,2]
out =[]
for i in range(len(a)):
    count=0
    for j in range(i):
        if a[i]< a[j]:
           count +=1
    out.append(count)
print(out)

==================================
/* Flowers and pots */
n1 =[1,1,2,3,4,4,5]
n2=6
index=n2
i=0
count=0
l=[]
while(i<index):
    if n1[i] not in l:
        count +=1
        l.append(n1[i])
    i=i+1
print(count)

===================================
/* marcus code */
l = [".-.-.-.",".-.-.-.-",".....------"]
count=0
for ele in l:
    dotcount =0
    dashcount =0
    if(ele[0]=='.' and ele[-1]=='-'):
        dotcount +=1
        dashcount +=1
        for i in range(1,len(ele)-1):
            if ele[i]=='.':
                dotcount +=1
            if ele[i]=='-':
                dashcount +=1
    if(dotcount!=0 and dashcount!=0 and dotcount == dashcount):
        count +=1
print(count)

===================================
/* Mr. Myer */
# Mr. myer
n1= [1,4,5,4,5]
new =[]
sum=0
for i in range(len(n1)):
    if n1[i] not in new:
        new.append(n1[i])
    else:
        new.append(new[-1]+1)
for ele in new:
    sum +=ele
print(sum)
=================================
# Electro static
n1 =[1,2,3]
charge_sign ='PNP'
new =[]
sum =0
for i in range(len(n1)):
    for j in range(len(charge_sign)):
        if i==j:
            if charge_sign[j]=='P':
                new.append(n1[i])
            else:
                new.append(-n1[i])
for l in new:
    sum +=l
if sum <0:
    sum *=-1
print("SUM",sum*100)

================================
/*---Coding Marathon:---*/
n1 =[4,1,5,3,5]
#o/p=>14
sum =0
for i in range(len(n1)):
    for j in range(len(n1)):
        if n1[i]>n1[j]:
            temp =n1[i]
            n1[i]=n1[j]
            n1[j]=temp

for i in range(3):
        sum +=n1[i]
print(sum)

================================
